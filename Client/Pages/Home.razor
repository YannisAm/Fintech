@using Fintech.Shared.Models;
@using Microsoft.AspNetCore.Components;
@using System.Security.Claims;

@page "/home"

<MudLayout Class="align-content-start">
    <MudContainer MaxWidth="MaxWidth.ExtraSmall" >
        <MudSelect T="Fintech.Shared.Models.Portfolio" Label="Portfolio" AnchorOrigin="Origin.BottomCenter" FullWidth="true">
            @foreach (var portfolio in Portfolios)
            {
                <MudSelectItem Value="@(portfolio)">@portfolio.NameOfPortfolio</MudSelectItem>
            }
        </MudSelect>
    </MudContainer>
    <MudPaper>
        <MudChart ChartType="ChartType.Pie" InputData="@data" InputLabels="@labels" Width="300px" Height="300px" />
    </MudPaper>
    
</MudLayout>

@code{

    [Inject]
    public IPortfolioService PortfolioService { get; set; }
    [Inject]
    public ISecurityService SecurityService { get; set; }
    [Inject]
    public AuthenticationStateProvider AuthenticationState { get; set; }
    private string userEmail;

    private List<Fintech.Shared.Models.Portfolio> Portfolios = new();
    private List<Fintech.Shared.Models.Security> Securities = new();
    private Fintech.Shared.Models.Portfolio portfolio;
    private double[] data;
    private string[] labels;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationState.GetAuthenticationStateAsync();
        var user = authState.User;
        if (user.Identity.IsAuthenticated)
        {
            var claimsIdentity = (ClaimsIdentity)user.Identity;
            var userIdClaim = claimsIdentity.FindFirst(ClaimTypes.Name);
            userEmail = userIdClaim?.Value;
        }
        
        Portfolios = await PortfolioService.GetPortfolios(userEmail);
        Securities = await SecurityService.GetSecurities(userEmail);
    }
}
