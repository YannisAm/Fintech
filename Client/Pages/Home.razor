@using Fintech.Shared.Models;
@using Microsoft.AspNetCore.Components;
@using System.Security.Claims;

@page "/home"

<MudLayout Class="align-content-start">
    <MudContainer MaxWidth="MaxWidth.ExtraSmall" >
        <MudSelect Value="@(portfolioK)"  ValueChanged="OnSelectedValueChange" T="Fintech.Shared.Models.Portfolio" Label="Portfolio" AnchorOrigin="Origin.BottomCenter" FullWidth="true">
            @foreach (var portfolio in Portfolios)
            {
                <MudSelectItem>@portfolio.NameOfPortfolio</MudSelectItem>
               
            }
        </MudSelect>
    </MudContainer>
    <MudDivider />
    <br />
    <p>Data is @Data</p>
    <p>Label is @Labels</p>
    @*<MudChart ChartType="ChartType.Pie" InputData="@Data" InputLabels="@Labels" Width="300px" Height="300px" />*@
</MudLayout>

@code{

    [Inject]
    public IPortfolioService PortfolioService { get; set; }
    [Inject]
    public ISecurityService SecurityService { get; set; }
    [Inject]
    public AuthenticationStateProvider AuthenticationState { get; set; }
    private string userEmail;

    private List<Fintech.Shared.Models.Portfolio> Portfolios = new();
    private List<Fintech.Shared.Models.Security> Securities = new();
    public Fintech.Shared.Models.Portfolio portfolioK { get; set; }
    public double[] Data { get; set; }
    public string[] Labels { get; set;}
    private int i = 0;
    private int j = 0;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationState.GetAuthenticationStateAsync();
        var user = authState.User;
        if (user.Identity.IsAuthenticated)
        {
            var claimsIdentity = (ClaimsIdentity)user.Identity;
            var userIdClaim = claimsIdentity.FindFirst(ClaimTypes.Name);
            userEmail = userIdClaim?.Value;
        }

        Portfolios = await PortfolioService.GetPortfolios(userEmail);
        Securities = await SecurityService.GetSecurities(userEmail);
    }

    private void OnSelectedValueChange()
    {
        Console.WriteLine(portfolioK);

        //foreach(var security in Securities)
        //{
        //    if(security.PortfolioId == portfolioSelected.Id)
        //    {
        //        i++;
        //    }
        //}

        //double[] data = new double[i];
        //string[] labels = new string[i];

        //foreach (var security in Securities)
        //{
        //    if (security.PortfolioId == portfolioSelected.Id)
        //    {
        //        data[j] = security.StockesOwned;
        //        labels[j] = security.SecurityName;
        //        j++;
        //    }
        //}

        //Data = data;
        //Labels = labels;
    }
}
